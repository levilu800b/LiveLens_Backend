# Generated by Django 5.2.1 on 2025-06-09 12:00

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('text', models.TextField(help_text='Maximum 1000 characters', validators=[django.core.validators.MinLengthValidator(1, 'Comment cannot be empty'), django.core.validators.MaxLengthValidator(1000, 'Comment cannot exceed 1000 characters')])),
                ('status', models.CharField(choices=[('published', 'Published'), ('pending', 'Pending Moderation'), ('hidden', 'Hidden'), ('deleted', 'Deleted')], default='published', max_length=20)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('dislike_count', models.PositiveIntegerField(default=0)),
                ('reply_count', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flagged_at', models.DateTimeField(blank=True, null=True)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('moderation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('flagged_by', models.ManyToManyField(blank=True, related_name='flagged_comments', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='comments.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': 'comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentInteraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('report', 'Report')], max_length=20)),
                ('report_reason', models.CharField(blank=True, max_length=100)),
                ('report_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='comments.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Interaction',
                'verbose_name_plural': 'Comment Interactions',
                'db_table': 'comment_interactions',
            },
        ),
        migrations.CreateModel(
            name='CommentModerationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('approve', 'Approved'), ('hide', 'Hidden'), ('delete', 'Deleted'), ('flag', 'Flagged'), ('unflag', 'Unflagged'), ('edit', 'Edited')], max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('old_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_logs', to='comments.comment')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Moderation Log',
                'verbose_name_plural': 'Comment Moderation Logs',
                'db_table': 'comment_moderation_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('reply', 'Reply to Comment'), ('like', 'Comment Liked'), ('mention', 'Mentioned in Comment'), ('moderation', 'Comment Moderated')], max_length=20)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='comments.comment')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_comment_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Notification',
                'verbose_name_plural': 'Comment Notifications',
                'db_table': 'comment_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['content_type', 'object_id'], name='comments_content_cd20f6_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user', 'created_at'], name='comments_user_id_88f50c_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['status', 'created_at'], name='comments_status_488383_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='comments_parent__9f8798_idx'),
        ),
        migrations.AddIndex(
            model_name='commentinteraction',
            index=models.Index(fields=['comment', 'interaction_type'], name='comment_int_comment_6eb6ce_idx'),
        ),
        migrations.AddIndex(
            model_name='commentinteraction',
            index=models.Index(fields=['user', 'interaction_type'], name='comment_int_user_id_6f8e38_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commentinteraction',
            unique_together={('user', 'comment', 'interaction_type')},
        ),
        migrations.AddIndex(
            model_name='commentmoderationlog',
            index=models.Index(fields=['comment', 'created_at'], name='comment_mod_comment_3a5c05_idx'),
        ),
        migrations.AddIndex(
            model_name='commentmoderationlog',
            index=models.Index(fields=['moderator', 'created_at'], name='comment_mod_moderat_dc34ff_idx'),
        ),
        migrations.AddIndex(
            model_name='commentmoderationlog',
            index=models.Index(fields=['action', 'created_at'], name='comment_mod_action_7cea61_idx'),
        ),
        migrations.AddIndex(
            model_name='commentnotification',
            index=models.Index(fields=['recipient', 'is_read', 'created_at'], name='comment_not_recipie_c82e03_idx'),
        ),
        migrations.AddIndex(
            model_name='commentnotification',
            index=models.Index(fields=['comment', 'notification_type'], name='comment_not_comment_de4e9d_idx'),
        ),
    ]
