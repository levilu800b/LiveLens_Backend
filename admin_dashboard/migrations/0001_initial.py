# Generated by Django 5.2.1 on 2025-06-09 12:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('story', 'Story'), ('film', 'Film'), ('content', 'Content'), ('podcast', 'Podcast'), ('animation', 'Animation'), ('sneak_peek', 'Sneak Peek')], max_length=20)),
                ('content_id', models.UUIDField()),
                ('content_title', models.CharField(max_length=200)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('unique_views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('dislikes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('downloads_count', models.PositiveIntegerField(default=0)),
                ('average_watch_time', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('return_viewer_rate', models.FloatField(default=0.0)),
                ('top_countries', models.JSONField(blank=True, default=list)),
                ('age_demographics', models.JSONField(blank=True, default=dict)),
                ('device_breakdown', models.JSONField(blank=True, default=dict)),
                ('traffic_sources', models.JSONField(blank=True, default=dict)),
                ('hourly_views', models.JSONField(blank=True, default=list)),
                ('daily_views', models.JSONField(blank=True, default=list)),
                ('weekly_views', models.JSONField(blank=True, default=list)),
                ('performance_score', models.FloatField(default=0.0)),
                ('trending_score', models.FloatField(default=0.0)),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content Analytics',
                'verbose_name_plural': 'Content Analytics',
                'db_table': 'content_analytics',
                'ordering': ['-date', '-views_count'],
                'indexes': [models.Index(fields=['content_type', 'date'], name='content_ana_content_a884dc_idx'), models.Index(fields=['performance_score', 'date'], name='content_ana_perform_bafb75_idx'), models.Index(fields=['trending_score', 'date'], name='content_ana_trendin_79e970_idx')],
                'unique_together': {('content_type', 'content_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DashboardStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('users', 'Total Users'), ('active_users', 'Active Users'), ('new_users', 'New Users'), ('stories', 'Total Stories'), ('films', 'Total Films'), ('content', 'Total Content'), ('podcasts', 'Total Podcasts'), ('animations', 'Total Animations'), ('sneak_peeks', 'Total Sneak Peeks'), ('comments', 'Total Comments'), ('views', 'Total Views'), ('likes', 'Total Likes'), ('shares', 'Total Shares'), ('downloads', 'Total Downloads'), ('revenue', 'Revenue'), ('subscriptions', 'Subscriptions')], max_length=50)),
                ('stat_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('total', 'Total')], max_length=20)),
                ('value', models.BigIntegerField(default=0)),
                ('percentage_change', models.FloatField(default=0.0)),
                ('date', models.DateField()),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dashboard Statistic',
                'verbose_name_plural': 'Dashboard Statistics',
                'db_table': 'dashboard_stats',
                'ordering': ['-date', 'metric_type'],
                'indexes': [models.Index(fields=['metric_type', 'stat_type', 'date'], name='dashboard_s_metric__baf62c_idx'), models.Index(fields=['date', 'metric_type'], name='dashboard_s_date_b5974d_idx')],
                'unique_together': {('metric_type', 'stat_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ReportGeneration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('user_analytics', 'User Analytics'), ('content_performance', 'Content Performance'), ('revenue_report', 'Revenue Report'), ('engagement_report', 'Engagement Report'), ('traffic_report', 'Traffic Report'), ('moderation_report', 'Moderation Report'), ('system_health', 'System Health'), ('custom', 'Custom Report')], max_length=50)),
                ('report_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('include_fields', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Generation',
                'verbose_name_plural': 'Report Generations',
                'db_table': 'report_generations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['requested_by', 'status', 'created_at'], name='report_gene_request_f68316_idx'), models.Index(fields=['report_type', 'created_at'], name='report_gene_report__7c0cad_idx'), models.Index(fields=['expires_at'], name='report_gene_expires_9e1dd1_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('alert_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical'), ('success', 'Success')], max_length=20)),
                ('category', models.CharField(choices=[('system', 'System'), ('security', 'Security'), ('performance', 'Performance'), ('content', 'Content'), ('user', 'User'), ('payment', 'Payment'), ('moderation', 'Moderation')], max_length=20)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('priority', models.IntegerField(choices=[(1, 'Priority 1'), (2, 'Priority 2'), (3, 'Priority 3'), (4, 'Priority 4'), (5, 'Priority 5')], default=1)),
                ('requires_action', models.BooleanField(default=False)),
                ('auto_dismiss_after', models.IntegerField(blank=True, help_text='Auto-dismiss after X hours', null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('slack_sent', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Alert',
                'verbose_name_plural': 'System Alerts',
                'db_table': 'system_alerts',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['alert_type', 'is_resolved', 'created_at'], name='system_aler_alert_t_e66393_idx'), models.Index(fields=['category', 'priority', 'created_at'], name='system_aler_categor_5f80fa_idx'), models.Index(fields=['is_read', 'requires_action'], name='system_aler_is_read_802f88_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('signup', 'User Signup'), ('profile_update', 'Profile Update'), ('password_change', 'Password Change'), ('content_view', 'Content View'), ('content_like', 'Content Like'), ('content_dislike', 'Content Dislike'), ('content_share', 'Content Share'), ('content_download', 'Content Download'), ('comment_post', 'Comment Posted'), ('comment_like', 'Comment Liked'), ('comment_reply', 'Comment Reply'), ('playlist_create', 'Playlist Created'), ('playlist_update', 'Playlist Updated'), ('search', 'Search Performed'), ('filter_use', 'Filter Used'), ('subscription_start', 'Subscription Started'), ('subscription_cancel', 'Subscription Cancelled'), ('payment', 'Payment Made'), ('error', 'Error Occurred')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'db_table': 'user_activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'activity_type', 'created_at'], name='user_activi_user_id_de49e5_idx'), models.Index(fields=['activity_type', 'created_at'], name='user_activi_activit_1c12f9_idx'), models.Index(fields=['ip_address', 'created_at'], name='user_activi_ip_addr_efb484_idx'), models.Index(fields=['created_at'], name='user_activi_created_9fa3ca_idx')],
            },
        ),
    ]
